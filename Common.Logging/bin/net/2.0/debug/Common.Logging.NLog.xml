<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Common.Logging.NLog</name>
    </assembly>
    <members>
        <member name="T:Common.Logging.NLog.NLogLogger">
            <summary>
            Concrete implementation of <see cref="T:Common.Logging.ILog"/> interface specific to NLog.
            </summary>
            <remarks>
            NLog is a .NET logging library designed with simplicity and flexibility in mind.
            http://www.nlog-project.org/
            </remarks>
            <author>Bruno Baia</author>
            <version>$Id: $</version>
        </member>
        <member name="M:Common.Logging.NLog.NLogLogger.#ctor(NLog.Logger)">
            <summary>
            Constructor
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:Common.Logging.NLog.NLogLogger.Info(System.Object,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="e"></param>
        </member>
        <member name="M:Common.Logging.NLog.NLogLogger.Info(System.Object)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Common.Logging.NLog.NLogLogger.Debug(System.Object,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="e"></param>
        </member>
        <member name="M:Common.Logging.NLog.NLogLogger.Debug(System.Object)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Common.Logging.NLog.NLogLogger.Warn(System.Object,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="e"></param>
        </member>
        <member name="M:Common.Logging.NLog.NLogLogger.Warn(System.Object)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Common.Logging.NLog.NLogLogger.Trace(System.Object,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="e"></param>
        </member>
        <member name="M:Common.Logging.NLog.NLogLogger.Trace(System.Object)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Common.Logging.NLog.NLogLogger.Fatal(System.Object,System.Exception)">
            <summary>
            Logs the specified message and exception at the Fatal log level.
            </summary>
            <param name="message">The message.</param>
            <param name="e">The e.</param>
        </member>
        <member name="M:Common.Logging.NLog.NLogLogger.Fatal(System.Object)">
            <summary>
            Logs the specified message at the Fatal log level.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Common.Logging.NLog.NLogLogger.Error(System.Object,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="e"></param>
        </member>
        <member name="M:Common.Logging.NLog.NLogLogger.Error(System.Object)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="P:Common.Logging.NLog.NLogLogger.IsInfoEnabled">
            <summary>
            Gets a value indicating whether this instance is info enabled.
            </summary>
            <value>
            	<c>true</c> if this instance is info enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Common.Logging.NLog.NLogLogger.IsWarnEnabled">
            <summary>
            Gets a value indicating whether this instance is warn enabled.
            </summary>
            <value>
            	<c>true</c> if this instance is warn enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Common.Logging.NLog.NLogLogger.IsErrorEnabled">
            <summary>
            Gets a value indicating whether this instance is error enabled.
            </summary>
            <value>
            	<c>true</c> if this instance is error enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Common.Logging.NLog.NLogLogger.IsFatalEnabled">
            <summary>
            Gets a value indicating whether this instance is fatal enabled.
            </summary>
            <value>
            	<c>true</c> if this instance is fatal enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Common.Logging.NLog.NLogLogger.IsDebugEnabled">
            <summary>
            Gets a value indicating whether this instance is debug enabled.
            </summary>
            <value>
            	<c>true</c> if this instance is debug enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Common.Logging.NLog.NLogLogger.IsTraceEnabled">
            <summary>
            Gets a value indicating whether this instance is trace enabled.
            </summary>
            <value>
            	<c>true</c> if this instance is trace enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Common.Logging.NLog.NLogLoggerFactoryAdapter">
            <summary>
            Concrete implementation of <see cref="T:Common.Logging.ILog"/> interface specific to NLog.
            </summary>
            <author>Bruno Baia</author>
            <version>$Id: $</version>
        </member>
        <member name="M:Common.Logging.NLog.NLogLoggerFactoryAdapter.#ctor(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Constructor
            </summary>
            <param name="properties"></param>
        </member>
        <member name="M:Common.Logging.NLog.NLogLoggerFactoryAdapter.GetLogger(System.String)">
            <summary>
            Get a ILog instance by type name 
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Common.Logging.NLog.NLogLoggerFactoryAdapter.GetLogger(System.Type)">
            <summary>
            Get a ILog instance by type 
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
    </members>
</doc>
